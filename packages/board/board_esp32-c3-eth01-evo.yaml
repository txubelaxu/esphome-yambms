# Updated : 2024.11.11
# Version : 1.2.4
# GitHub  : https://github.com/Sleeper85/esphome-yambms

# YamBMS ( Yet another multi-BMS Merging Solution )

# This YAML is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/gpl.html>.

substitutions:
  board_chip: "ESP32-C3"
  board_name: "ETH01-EVO"

esp32:
  board: esp32-c3-devkitm-1
  variant: esp32c3
  flash_size: 2MB
  framework:
    type: esp-idf
    version: latest
    platform_version: 6.5.0

esphome:
  platformio_options:
    board_build.flash_mode: dio # Standard uses a single line for data, Dual IO uses 2 lines for data (prevent reboot loop)

# external_components:
#   - source: github://pr#6861
#     components:
#       - ethernet

external_components:
  - source: 
      type: git
      url: https://github.com/esphome/esphome
      ref: d5bdf2575c151abfad39b6c24c3856395a7d0901
    components:
      - ethernet

ethernet:
  id: my_network
  type: DM9051 # W5500
  clk_pin: 7
  mosi_pin: 10
  miso_pin: 3
  cs_pin: 9
  interrupt_pin: 8
  reset_pin: 6
  clock_speed: 20MHz

# logger:
#   hardware_uart: USB_SERIAL_JTAG

uart:
  # UART 1
  - id: uart_esp_1
    tx_pin: 2
    rx_pin: 5
    baud_rate: 115200
    rx_buffer_size: 512

canbus:
  # CANBUS NODE 1
  - platform: esp32_can
    id: canbus_node1
    tx_pin: 19 # to CAN board CTX
    rx_pin: 18 # to CAN board CRX (with 4.7K resistor except for SN65HVD230)
    can_id: 1
    bit_rate: 500kbps

# +--------------------------------------+
# | Inverter Heartbeat Light             |
# +--------------------------------------+

light:
  # ESP Light used to see the inverter heartbeat
  # Internal : only specifying an id without a name will implicitly set this to true.
  - platform: binary
    id: esp_light
    output: esp_output

output:
  # ESP32 board without LED
  - platform: template
    id: esp_output
    type: binary
    write_action:
      - logger.log: "Inverter Heartbeat Output"
      #- lambda: C++ code; # action to be performed at each inverter heartbeat
