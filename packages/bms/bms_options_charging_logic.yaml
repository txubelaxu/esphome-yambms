# Updated : 2025.01.25
# Version : 1.1.1
# GitHub  : https://github.com/Sleeper85/esphome-yambms

# YamBMS ( Yet another multi-BMS Merging Solution )

# This YAML is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation, either version 3
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/gpl.html>.

# +--------------------------------------+
# | Scripts                              |
# +--------------------------------------+
script:
  - id: bms${bms_id}_script_cutoff_timer
    then:
      - delay: ${bms_cutoff_timer}
      - switch.turn_off: bms${bms_id}_charge_switch

interval:
  - interval: ${bms_combine_interval}
    then:
      - lambda: |-
          if (id(${yambms_id}_charge_status) == "Cut-Off")
          {
            // The cells are equalizing
            if (id(bms${bms_id}_equalizing).state)
            {
              // Stop cut-off timer
              if (id(bms${bms_id}_script_cutoff_timer).is_running()) id(bms${bms_id}_script_cutoff_timer).stop();
            }
            // The cells are not equalizing
            else if (!id(bms${bms_id}_script_cutoff_timer).is_running())
            {
              // Start cut-off timer : if the conditions continue to be respected the charging process will stop in 60s (default value)
              id(bms${bms_id}_script_cutoff_timer).execute();
            }
          }
          else if (!id(bms${bms_id}_charge_switch).state) // Charge switch is OFF ?
          {
            id(bms${bms_id}_charge_switch).turn_on(); // Turn ON > Charge switch
          }
          else if (id(bms${bms_id}_script_cutoff_timer).is_running()) // Cut-off timer is running ?
          {
            id(bms${bms_id}_script_cutoff_timer).stop(); // Stop cut-off timer
          }
